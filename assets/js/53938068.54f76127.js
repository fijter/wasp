(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[4816],{3599:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),c=["components"],i={keywords:["ISCP","requests","off-ledger"],description:"Off-ledger Requests",image:"/img/logo/WASP_logo_dark.png"},s="Off-ledger Requests",d={unversionedId:"guide/core_concepts/smartcontract-interaction/off-ledger-requests",id:"guide/core_concepts/smartcontract-interaction/off-ledger-requests",isDocsHomePage:!1,title:"Off-ledger Requests",description:"Off-ledger Requests",source:"@site/docs/guide/core_concepts/smartcontract-interaction/off-ledger-requests.md",sourceDirName:"guide/core_concepts/smartcontract-interaction",slug:"/guide/core_concepts/smartcontract-interaction/off-ledger-requests",permalink:"/docs/guide/core_concepts/smartcontract-interaction/off-ledger-requests",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/guide/core_concepts/smartcontract-interaction/off-ledger-requests.md",version:"current",frontMatter:{keywords:["ISCP","requests","off-ledger"],description:"Off-ledger Requests",image:"/img/logo/WASP_logo_dark.png"},sidebar:"tutorialSidebar",previous:{title:"On-ledger Requests",permalink:"/docs/guide/core_concepts/smartcontract-interaction/on-ledger-requests"},next:{title:"How ISCP Works As a Language/VM Agnostic Platform",permalink:"/docs/guide/core_concepts/vm-types/iscp-vm"}},u=[{value:"Nonce",id:"nonce",children:[]},{value:"Using the WASP Web API",id:"using-the-wasp-web-api",children:[]}],l={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"off-ledger-requests"},"Off-ledger Requests"),(0,a.kt)("p",null,"The alternative way of sending requests is so-called ",(0,a.kt)("inlineCode",{parentName:"p"},"off-ledger")," requests. Its an API call to a Wasp node, which has access\nto the state of the target chain, an ",(0,a.kt)("inlineCode",{parentName:"p"},"access node")," (which can be a committee node, or not).\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"off-ledger")," request is not a transaction, it just contains the same information as an on-ledger request and its\ncryptographically signed. These kind of request don't rely on the Tangle for confirmation so they are much faster."),(0,a.kt)("h2",{id:"nonce"},"Nonce"),(0,a.kt)("p",null,"In order to ",(0,a.kt)("a",{parentName:"p",href:"/docs/rfc/prevent-mev"},"prevent replay attacks"),", it is required for off-ledger requests to include a special parameter, the ",(0,a.kt)("inlineCode",{parentName:"p"},"nonce"),".\nNonces are account-bound, the current nonce for a given account can be obtained via the ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/core_concepts/core_contracts/accounts"},(0,a.kt)("inlineCode",{parentName:"a"},"accounts"))," core contract ",(0,a.kt)("inlineCode",{parentName:"p"},"getAccountNonce")," view."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Important")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"It's highly recommended to use ",(0,a.kt)("strong",{parentName:"p"},"strictly monotonic increasing")," nonces in off-ledger requests (i.e. 1,2,3,4,5)."))),(0,a.kt)("h2",{id:"using-the-wasp-web-api"},"Using the WASP Web API"),(0,a.kt)("p",null,"Off-ledger requests, after constructed can be sent a Wasp node webapi ",(0,a.kt)("inlineCode",{parentName:"p"},"/request/<chain_id>")," endpoint via POST with the request as the body binary, or as a base64 string (MIME-type must be defined accordingly)."))}p.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),f=o,m=p["".concat(s,".").concat(f)]||p[f]||l[f]||a;return n?r.createElement(m,c(c({ref:t},u),{},{components:n})):r.createElement(m,c({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var d=2;d<a;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);