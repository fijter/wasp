(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[4259],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(7294);function c(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,c=function(e,r){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(c[t]=e[t]);return c}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var a=n.createContext({}),p=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(a.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,c=e.mdxType,o=e.originalType,a=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=p(t),d=c,m=f["".concat(a,".").concat(d)]||f[d]||l[d]||o;return t?n.createElement(m,i(i({ref:r},s),{},{components:t})):n.createElement(m,i({ref:r},s))}));function d(e,r){var t=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var o=t.length,i=new Array(o);i[0]=f;var u={};for(var a in r)hasOwnProperty.call(r,a)&&(u[a]=r[a]);u.originalType=e,u.mdxType="string"==typeof e?e:c,i[1]=u;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4932:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return u},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var n=t(2122),c=t(9756),o=(t(7294),t(3905)),i=["components"],u={},a="ISCP Architecture overview",p={unversionedId:"guide/core_concepts/iscp-architecture",id:"guide/core_concepts/iscp-architecture",isDocsHomePage:!1,title:"ISCP Architecture overview",description:"Architecture v3.",source:"@site/docs/guide/core_concepts/iscp-architecture.md",sourceDirName:"guide/core_concepts",slug:"/guide/core_concepts/iscp-architecture",permalink:"/wasp/docs/guide/core_concepts/iscp-architecture",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/guide/core_concepts/iscp-architecture.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ISCP",permalink:"/wasp/docs/guide/core_concepts/iscp"},next:{title:"Validators",permalink:"/wasp/docs/guide/core_concepts/validators"}},s=[],l={toc:s};function f(e){var r=e.components,t=(0,c.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"iscp-architecture-overview"},"ISCP Architecture overview"),(0,o.kt)("p",null,"Architecture v3."))}f.isMDXComponent=!0}}]);