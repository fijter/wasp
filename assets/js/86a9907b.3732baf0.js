(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[9410],{2553:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(2122),o=n(9756),c=(n(7294),n(3905)),a=["components"],i={},l="The `blocklog` contract",s={unversionedId:"contract_core/blocklog",id:"contract_core/blocklog",isDocsHomePage:!1,title:"The `blocklog` contract",description:"The blocklog contract is one of the core contracts on each ISCP",source:"@site/docs/contract_core/blocklog.md",sourceDirName:"contract_core",slug:"/contract_core/blocklog",permalink:"/docs/contract_core/blocklog",editUrl:"https://github.com/iotaledger/wasp/tree/master/documentation/docs/contract_core/blocklog.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The `blob` contract",permalink:"/docs/contract_core/blob"},next:{title:"The `eventlog` contract",permalink:"/docs/contract_core/eventlog"}},p=[{value:"Entry Points",id:"entry-points",children:[]},{value:"Views",id:"views",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"the-blocklog-contract"},"The ",(0,c.kt)("inlineCode",{parentName:"h1"},"blocklog")," contract"),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"blocklog")," contract is one of the ",(0,c.kt)("a",{parentName:"p",href:"/docs/contract_core/overview"},"core contracts")," on each ISCP\nchain."),(0,c.kt)("p",null,"The function of the ",(0,c.kt)("inlineCode",{parentName:"p"},"blocklog")," contract is to keep track of the blocks of\nrequests that were processed by the chain."),(0,c.kt)("p",null,"It provides functions to deposit and withdraw funds, also gives the count of\ntotal assets deposited on the chain. Note that the ledger of accounts is\nconsistently maintained by the VM behind scenes,the ",(0,c.kt)("inlineCode",{parentName:"p"},"accounts"),"\ncore smart contract provides frontend of authorized access to those account by\noutside users."),(0,c.kt)("h3",{id:"entry-points"},"Entry Points"),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"blocklog")," core contract does not contain any entry points which modify its\nstate."),(0,c.kt)("p",null,"The only way to modify the ",(0,c.kt)("inlineCode",{parentName:"p"},"blocklog")," state is by submitting requests for\nprocessing to the chain."),(0,c.kt)("h3",{id:"views"},"Views"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewGetBlockInfo")," - Returns the data of the block in the chain with\nspecified index.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewGetLatestBlockInfo")," - Returns the index and data of the latest block in\nthe chain.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewGetRequestLogRecord")," - Returns the data, block index, and request index\nof the specified request.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewGetRequestLogRecordsForBlock")," - Returns the data, block index, and\nrequest index of all requests in the block with the specified block index.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewGetRequestIDsForBlock")," - Returns the IDs of all requests in the block\nwith the specified block index.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"viewIsRequestProcessed")," - Returns whether a request with specified ID has\nbeen processed."))))}d.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,h=d["".concat(l,".").concat(f)]||d[f]||u[f]||c;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);